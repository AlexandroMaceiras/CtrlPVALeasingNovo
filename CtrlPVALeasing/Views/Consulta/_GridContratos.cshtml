@model IEnumerable<CtrlPVALeasing.Models.ContratosVeiculosViewModel>

<table class="table" border="1" style="border-style:inherit">
    <tr>
        <td>
            <table class="table">
                <tr>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">Nº</div> @*@Html.DisplayNameFor(model => model.id)*@
                    </th>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">Número do Contrato</div> @*@Html.DisplayNameFor(model => model.modelo)*@
                    </th>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">Status do Contrato</div> @*@Html.DisplayNameFor(model => model.chassi)*@
                    </th>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">Data de Início</div> @*@Html.DisplayNameFor(model => model.renavam)*@
                    </th>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">Data de Vencimento</div> @*@Html.DisplayNameFor(model => model.placa)*@
                    </th>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">Último Pagamento</div> @*@Html.DisplayNameFor(model => model.placa)*@
                    </th>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">Data da Baixa</div>
                    </th>
                    <th class="input-sm-fino">
                        <div class="fonte-cinza-claro fonte-tamanho-form">CPF/CNPJ</div> @*@Html.DisplayNameFor(model => model.placa)*@
                    </th>
                    <th></th>
                </tr>

                @{var contadorInterno = 0;
                    foreach (var item in Model)
                    {
                        if (item.contrato != null)
                        {
                            contadorInterno++;
                            <tr>
                                <td class="input-sm-fino">
                                    @contadorInterno
                                </td>
                                <td class="input-sm-fino">
                                    @item.contrato.ToString()
                                </td>
                                <td class="input-sm-fino">
                                     <text>@(item.status.HasValue && item.status.Value == true ? "ATIVO" : "LIQUIDADO")</text>
                                </td>
                                <td class="input-sm-fino">
                                    @Html.DisplayFor(modelItem => item.dta_inicio_contrato)
                                </td>
                                <td class="input-sm-fino">
                                    @Html.DisplayFor(modelItem => item.dta_vecto_contrato)
                                </td>
                                <td class="input-sm-fino">
                                    @Html.DisplayFor(modelItem => item.dta_ultimo_pagto)
                                </td>
                                <td class="input-sm-fino">
                                    @Html.DisplayFor(modelItem => item.data_da_baixa)
                                </td>
                                <td class="input-sm-fino">
                                    @{
                                        try
                                        {
                                            var resultado = "";
                                            var cpfcnpjsemzeros = "";
                                            if (@item.cpf_cnpj_cliente != "")
                                            {
                                                cpfcnpjsemzeros = @item.cpf_cnpj_cliente.TrimStart('0').Trim();
                                            }

                                            var p1 = "";
                                            var p2 = "";
                                            var p3 = "";
                                            var p4 = "";
                                            var p5 = "";

                                            if (cpfcnpjsemzeros.Length > 11)
                                            {
                                                if (cpfcnpjsemzeros.Length == 14)
                                                {
                                                    p1 = @cpfcnpjsemzeros.Substring(0, 2);
                                                    p2 = @cpfcnpjsemzeros.Substring(2, 3);
                                                    p3 = @cpfcnpjsemzeros.Substring(5, 3);
                                                    p4 = @cpfcnpjsemzeros.Substring(8, 4);
                                                    p5 = @cpfcnpjsemzeros.Substring(12, 2);
                                                    resultado = p1 + "." + p2 + "." + p3 + "/" + p4 + "-" + p5;
                                                }
                                                else if (cpfcnpjsemzeros.Length == 13)
                                                {
                                                    p1 = @cpfcnpjsemzeros.Substring(0, 1);
                                                    p2 = @cpfcnpjsemzeros.Substring(1, 3);
                                                    p3 = @cpfcnpjsemzeros.Substring(4, 3);
                                                    p4 = @cpfcnpjsemzeros.Substring(7, 4);
                                                    p5 = @cpfcnpjsemzeros.Substring(11, 2);
                                                    resultado = "0" + p1 + "." + p2 + "." + p3 + "/" + p4 + "-" + p5;
                                                }
                                                else if (cpfcnpjsemzeros.Length == 12)
                                                {
                                                    p1 = @cpfcnpjsemzeros.Substring(0, 3);
                                                    p2 = @cpfcnpjsemzeros.Substring(3, 3);
                                                    p3 = @cpfcnpjsemzeros.Substring(6, 4);
                                                    p4 = @cpfcnpjsemzeros.Substring(10, 2);
                                                    resultado = p1 + "." + p2 + "/" + p3 + "-" + p4;
                                                }
                                            }
                                            else if (cpfcnpjsemzeros.Length == 11)
                                            {
                                                p1 = @cpfcnpjsemzeros.Substring(0, 3);
                                                p2 = @cpfcnpjsemzeros.Substring(3, 3);
                                                p3 = @cpfcnpjsemzeros.Substring(6, 3);
                                                p4 = @cpfcnpjsemzeros.Substring(9, 2);

                                                resultado = p1 + "." + p2 + "." + p3 + "-" + p4;
                                            }
                                            else if (cpfcnpjsemzeros.Length < 11)
                                            {
                                                for (int i = 0; i <= cpfcnpjsemzeros.Length; i += 3)
                                                {
                                                    if (i < (cpfcnpjsemzeros.Length - 3))
                                                    {
                                                        resultado += cpfcnpjsemzeros.Substring(i, 3) + ".";
                                                    }
                                                    else
                                                    {
                                                        resultado += cpfcnpjsemzeros.Substring(i, cpfcnpjsemzeros.Length - i);
                                                    }

                                                    if (cpfcnpjsemzeros.Length < 4)
                                                    {
                                                        resultado = cpfcnpjsemzeros;
                                                    }
                                                }
                                            }
                                            @resultado
                                        }
                                        catch
                                        {
                                            @item.cpf_cnpj_cliente
                                        }
                                    }
                                </td>
                                <td class="input-sm-fino">
                                    @*@Html.ActionLink("Editar", "Edit", new { id = item.id }) |*@
                                    @Html.ActionLink("DETALHES", "ConsultaContrato", new { contrato = item.contrato }, new { @class = "btn2 btn-primary-detalhes btn-sm" }) @*|
                                        @Html.ActionLink("Deletar", "Delete", new { id = item.id })*@
                                </td>
                            </tr>
                        }
                    }
                }
            </table>

        </td>
    </tr>
</table>


